plugins {
	alias(libs.plugins.springBoot)
	alias(libs.plugins.gitProperties)
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

springBoot {
	buildInfo()
}

tasks.withType(Jar) {
	exclude('application-local.properties')
	exclude('application-dev.properties')
}

dependencies {
	implementation('org.springframework.boot:spring-boot-devtools')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.apache.commons:commons-pool2')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation('org.springframework.session:spring-session-jdbc')
	implementation(libs.egit.github.core)
	implementation('org.webjars:webjars-locator-core')
	implementation(libs.webjars.bootstrap)
	implementation(libs.webjars.jquery)
	implementation(libs.webjars.select2)
	implementation('net.sourceforge.nekohtml:nekohtml')
	implementation('org.flywaydb:flyway-core')
	implementation('org.flywaydb:flyway-mysql')
	implementation(libs.mysql.connector)
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	testImplementation('org.springframework.boot:spring-boot-testcontainers')
	testImplementation('org.testcontainers:junit-jupiter')
	testImplementation('org.testcontainers:mysql')
	testImplementation('org.springframework.boot:spring-boot-configuration-processor')
	testImplementation('org.springframework.boot:spring-boot-devtools')
	testImplementation('org.springframework.security:spring-security-test')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('net.sourceforge.htmlunit:htmlunit')
	testImplementation('org.seleniumhq.selenium:htmlunit-driver')
	testImplementation('org.seleniumhq.selenium:selenium-api')
	testImplementation('org.seleniumhq.selenium:selenium-remote-driver')
	testImplementation('org.seleniumhq.selenium:selenium-support')
	testImplementation('org.assertj:assertj-core')
	testImplementation('com.squareup.okhttp3:mockwebserver')
	testImplementation('org.testcontainers:selenium')
}



test {
	useJUnitPlatform()
}

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}